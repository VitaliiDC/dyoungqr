{"version":3,"sources":["api/api.js","redux/main.js","redux/store.js","component/main/main.jsx","component/main/mainContainer.jsx","component/t/t.jsx","component/t/tContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","withcredentials","baseURL","api","sendMail","data","console","log","post","then","e","initialState","loading","setLoading","value","type","main","state","action","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","Main","props","submit","values","a","setSubmitting","resetForm","sendMailThunk","history","push","className","undefined","onSubmit","initialValues","name","message","isSubmitting","autoComplete","placeholder","as","mapDispatch","dispatch","connect","T","to","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4870c4c4.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withcredentials: true,\r\n    baseURL: 'https://dyoungqr.herokuapp.com'\r\n})\r\n\r\nconst api = {\r\n    sendMail(data){console.log(data); return instance.post(`/`, {...data}).then(e => e.data)}\r\n}\r\n\r\nexport default api","import api from '../api/api'\r\n\r\nconst initialState = {\r\n    loading: false\r\n}\r\n\r\nconst main = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'loading': return {...state, loading: action.value}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setLoading = (value) => ({type: 'loading', value})\r\n\r\nexport const sendMailThunk = (data) => async (dispatch) => {\r\n    dispatch(setLoading(true))\r\n    await api.sendMail(data)\r\n    dispatch(setLoading(false))\r\n}\r\n\r\nexport default main","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport main from './main'\r\n\r\nconst reducers = combineReducers({\r\n    main\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nconst Main = (props) => {\r\n    let submit = async(values, {setSubmitting, resetForm}) => {\r\n        await props.sendMailThunk(values)\r\n        resetForm({values: ''})\r\n        setSubmitting(false)\r\n        props.history.push('/t')\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            {props.loading ? <div className=\"preloader\"><span></span></div> : undefined}\r\n            <div className=\"container\">\r\n                <div className=\"main__body\">\r\n                    <div className=\"main__title\"><span>DYoung</span> QR</div>\r\n                    <div className=\"main__subtitle\">Пиши свої ідеї та скарги<br />(можна анонімно)</div>\r\n                    <Formik onSubmit={submit} initialValues={{name: '', message: ''}}>\r\n                        {(isSubmitting) => (\r\n                            <Form autoComplete=\"off\" className=\"main__form\">\r\n                                <Field name=\"name\" type=\"text\" placeholder=\"Ім’я (не обов’язково)\" />\r\n                                <Field as=\"textarea\" name=\"message\" placeholder=\"Повідомлення\" />\r\n                                <button type=\"submit\" className=\"main__btn\">Відправити</button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Main from './main'\r\nimport './main.css'\r\nimport {sendMailThunk} from '../../redux/main'\r\n\r\nconst MainContainer = (props) => {\r\n    return (\r\n        <Main {...props} />\r\n    )\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    loading: state.main.loading\r\n})\r\n\r\nconst mapDispatch = {sendMailThunk}\r\n\r\nexport default connect(mapState, mapDispatch)(MainContainer)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst T = (props) => {\r\n    return (\r\n        <div className=\"t\">\r\n            <div className=\"container\">\r\n                <div className=\"t__body\">\r\n                    <div className=\"t__done\"><span></span></div>\r\n                    <div className=\"main__subtitle t__subtitle\">Дякуєм за твій відгук!</div>\r\n                    <NavLink to=\"/\" className=\"main__btn t__btn\">Написати ще</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default T","import React from 'react'\r\nimport T from './t'\r\nimport {connect} from 'react-redux'\r\nimport './t.css'\r\n\r\nconst TContainer = props => {\r\n    return (\r\n        <T {...props} />\r\n    )\r\n}\r\n\r\nconst mapState = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatch = {}\r\n\r\nexport default connect(mapState, mapDispatch)(TContainer)","import './App.css'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport Main from './component/main/mainContainer'\nimport T from './component/t/tContainer'\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"App\" >\n          <div className=\"background\"></div>\n          <Switch>\n            <Route path=\"/t\" component={T} />\n            <Route path=\"/\" component={Main} />\n          </Switch>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}